package com.intern.mapping;
// Generated Oct 19, 2018 9:31:09 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Page generated by hbm2java
 */
@Entity
@Table(name="page"
    ,catalog="demo"
)
public class Page  implements java.io.Serializable {


     private Integer pageId;
     private String pageName;
     private String pageUrl;
     private Set<PageFunctions> pageFunctionses = new HashSet<PageFunctions>(0);
     private Set<User> users = new HashSet<User>(0);

    public Page() {
    }

	
    public Page(String pageName, String pageUrl) {
        this.pageName = pageName;
        this.pageUrl = pageUrl;
    }
    public Page(String pageName, String pageUrl, Set<PageFunctions> pageFunctionses, Set<User> users) {
       this.pageName = pageName;
       this.pageUrl = pageUrl;
       this.pageFunctionses = pageFunctionses;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="page_id", unique=true, nullable=false)
    public Integer getPageId() {
        return this.pageId;
    }
    
    public void setPageId(Integer pageId) {
        this.pageId = pageId;
    }

    
    @Column(name="page_name", nullable=false, length=100)
    public String getPageName() {
        return this.pageName;
    }
    
    public void setPageName(String pageName) {
        this.pageName = pageName;
    }

    
    @Column(name="page_url", nullable=false, length=100)
    public String getPageUrl() {
        return this.pageUrl;
    }
    
    public void setPageUrl(String pageUrl) {
        this.pageUrl = pageUrl;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="page")
    public Set<PageFunctions> getPageFunctionses() {
        return this.pageFunctionses;
    }
    
    public void setPageFunctionses(Set<PageFunctions> pageFunctionses) {
        this.pageFunctionses = pageFunctionses;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="role_pages", catalog="demo", joinColumns = { 
        @JoinColumn(name="page_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="role_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


